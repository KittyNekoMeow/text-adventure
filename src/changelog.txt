May 20 2024
Added:
 beginning of see into the past spell

Bugs:
 the hallways are not working with the spell implementation
 
 FirstRoom returns 0 which cancels spell
-----------------------------------------------------------------------------------------
May 18 2024
Added:
 inspect person implementation
 enhanced insight implementation
-----------------------------------------------------------------------------------------
May 16 2024
Added:
 the beginning of the spell system
-----------------------------------------------------------------------------------------
May 15 2024
Added:
 mana to Entity
-----------------------------------------------------------------------------------------
May 13 2024
Fixed:
 when you start the game you can pickup the robe
 then re-enter the bathroom and pickup the robe again

 scenes now print before room text

Added:
 SchoolEntrance struct

Moved:
 all_scenes.rs to lib
-----------------------------------------------------------------------------------------
May 12 2024
Added:
 spells.rs

 spell_circle to Entity
 
 get_spell_lore()
 print_spell()

 get_circle_lore()
 print_circle()

 Stage struct

 Seat struct

 fourth_scene()

 interact_with_item()

 fifth_scene()
Removed:
 stats from Entity
-----------------------------------------------------------------------------------------
May 9 2024
Added:
 more flavor text to search text

 SchoolAuditorium struct
Changed:
 formating of the search text
-----------------------------------------------------------------------------------------
May 8 2024
Added:
 dialogue.rs

 CampusSquare struct

 CAMPUSSQUAREMAP

 third_scene()

Changed:
 print_dialogue() to get_dialogue()
 it now calls print_dialogue() in dialogue.rs
-----------------------------------------------------------------------------------------
May 7 2024
Added:
 npcs.rs

 BasicNPC struct

 DormOffice struct

 npc_interaction.rs

 print_dialogue()

 get_npc_index()
-----------------------------------------------------------------------------------------
May 6 2024
Added:
 DormRoom struct
 
 SchoolDorms struct

 DORMMAP interactable

 Hallway is now creates 4 different hallways
 hallway_e1 hallway_e2 hallway_w1 hallway_w2
-----------------------------------------------------------------------------------------
May 5 2024
Added:
 pickup item now prints some text

 Changed:
 printing now has a blank space between 
 the different blocks of text
-----------------------------------------------------------------------------------------
May 4 2024
Added:
 second_scene() to play_game()

 some flavor to how the text looks
 with colored

 start_up_scene()

 Removed:
 choose_hair_color
 choose_eye_color
-----------------------------------------------------------------------------------------
May 3 2024
Added:
 the hallway area

 print_search()
 gives the description of the area
 
 second_check() returns true if the 
 conditions for the the second scene have occurred

 all_scenes() 
 holds bool values that indicate if a scene has occurred
 scene_complete()
 updates all_scenes() when a scene has occurred

Changed:
 first_room.rs to all_rooms.rs

 first_scene.rs to all_scenes.rs

Moved:
 default_state() to GameState as a method

Removed:
 new_game.rs
-----------------------------------------------------------------------------------------
May 2 2024
Added:
 a counter to Room

 add_entered() to GameState
 plus 1 when player enters a room
-----------------------------------------------------------------------------------------
May 1 2024(2)
Added:
 the first scene

Changed:
 the items are now split between interactable and collectable
 they are not combined into one type

 names and descriptions are now held in an array
 index into the array by the lore field on the item
-----------------------------------------------------------------------------------------
May 1 2024
Added:
the start of changing how items work
-----------------------------------------------------------------------------------------
April 29 2024
Added:
 get_collect_index() to GameState
 same function as get_inter_index()
 store field to GameState
 if store false it cannot push to inventory

 some comments
-----------------------------------------------------------------------------------------
April 28 2024(2)
Added:
 item_interactions file
 item_interaction() goes through all the interactions
 the player can have with an item in a room

 get_inter_index() to GameState
 it calls get_inter_index() on room
 and returns the index at that an interactable item is at
 
 Changed:
 Room interactable_items field to hold the tuple (String, Interactable)

 Removed:
 interactable_items
-----------------------------------------------------------------------------------------
April 28 2024
Version 0.0.1
Added:
 pickup_item() to GameState
 it calls get_item() whitch calls choose_item()
 this the ability to pickup items
-----------------------------------------------------------------------------------------
April 27 2024
Version 0.0.1
Added:
 id field to item structs

 get_desc_id() returns the items id

 change_desc_id() to all item structs

 scene folder
 I plan to hold all the scripted scenes in it

 area folder to lib
 area has the Area struct that will contain the different areas
 and what they hold

 current_area, previous_area, and all_areas as fields to GameState
 current_area stores the current area
 previous_area will store the previous areas
 all_areas hold all the different areas in the game

 update_area to GameState
 updates the area with new information

 the ability to quit
 typing quit makes default_state() return false
Changed:
 get_item_lore() to now take id as the last tuple value

 input in default state to lowercase 

 the movement
 you will now move to a room when you type the rooms name
 instead of going in four different directions

 the name of map to history

 get_default_state() to loop while default_state() returns true

 Removed:
 the cardinal const
-----------------------------------------------------------------------------------------
April 26 2024
Version 0.0.1
Added:
 add_staff()

 print_item() prints the information in a clean way 

 get_item_lore() is what print_item() calls
 it calls either item_name() or item_description()
 that then call the the various functions of the item type

 Changed:
 PlayerCharacter methods to take a reference to self

 print_entity() stats to look better

 LeatherArmor to Robe

 Moved:
 test into it's own folder
-----------------------------------------------------------------------------------------
April 25 2024
Version 0.0.1
Added:
 the method push_movement() GameState
 it checks if the field movement is true before pushing to map

 check_direction() checks if input is equal to a movement option
 
 get_default_state() calls default_state() while it returns false

 default_state() calls the regular state that the game will be in
 
 print_entity()

 check_entity_field() checks if intput is equal to a field of entity

Changed:
 the methods on entity to take a reference to self

 Removed:
 get_direction()
-----------------------------------------------------------------------------------------
April 24 2024
Version 0.0.1
Added:
 the staff struct for a weapon for magic
 
 magic damage to WeaponType

 get_direction() calls match_for_direction() to print the scripted text

 const cardinal directions

 the GameState struct

 the ability to block adding values to map on GameState

Changed:
the name of updatelog to changelog

the look of the changelog

Removed:
 new_map() as has the ability to use ::new()
-----------------------------------------------------------------------------------------
April 23 2024(2)
0.0.1
Added:
 the ability to choose the name of the character

 the map, whitch is a vector that stores all previous movements made

Changed:
 the variables in choose hair and eye colors to be the
 result of matching recive_input()

Moved:
 all code into a lib folder
-----------------------------------------------------------------------------------------

April 23 2024
Version 0.0.1
Added:
 the updatelog to not need to use the commit summaries

 the player character file

 the create entitys file to store the code to create different entitys

 the basis of creating the player character

 the test file to not use the main file to run tests

Changed:
 the damage types to be magic damage and weapon damage